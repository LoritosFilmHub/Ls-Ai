
import React from 'react';
import { Button } from '@/components/ui/button';
import { 
    Paintbrush, Camera, Tv, Box, Droplets, Grid, Feather, Landmark, Zap, Cookie, Sticker, BookOpen,
    TreePine, Users, Gamepad2, Hexagon, User, Palette, Flower, Rocket, Type, Triangle, 
    Shirt, Home, Coffee, Smile, Building, FileImage, Mountain,
    ToyBrick, Bird, Atom, Ghost, Sprout, Clapperboard, Wand2, Dna, Bot, Fingerprint, Car
} from 'lucide-react';

const styles = [
    // Estilos Clássicos
    { name: 'Fotográfico', value: 'photographic style, hyperrealistic, 8k', icon: Camera },
    { name: 'Arte Digital', value: 'digital painting, concept art, smooth, sharp focus', icon: Paintbrush },
    { name: 'Cyberpunk', value: 'cyberpunk style, neon lights, futuristic city, dystopian', icon: Zap },
    { name: 'Anime', value: 'anime style, manga style, detailed, vibrant colors', icon: Tv },
    
    // Novos Estilos Adicionados
    { name: 'Estilo Lego', value: 'lego bricks style, blocky, plastic toy look', icon: ToyBrick },
    { name: 'Estilo Moebius', value: 'style by Moebius (Jean Giraud), intricate line work, surreal sci-fi landscapes, Ligne claire', icon: Feather },
    { name: 'Estilo Origami', value: 'origami style, folded paper art, geometric, clean folds', icon: Bird },
    { name: 'Estilo Mandala', value: 'mandala art, intricate symmetrical patterns, spiritual, geometric design', icon: Atom },
    { name: 'Estilo Scooby-Doo', value: 'Hanna-Barbera cartoon style, Scooby-Doo animation, 1960s retro cartoon', icon: Ghost },
    { name: 'Estilo Mário e Luigi', value: 'Super Mario Bros style, Nintendo art, colorful, plumber characters', icon: Sprout },
    { name: 'Estilo Storyboard', value: 'storyboard sketch style, black and white, rough lines, cinematic framing', icon: Clapperboard },
    { name: 'Estilo ImageFX', value: 'ImageFX style, high quality photorealistic, detailed, crisp focus', icon: Wand2 },
import React from 'react';
import { Button } from '@/components/ui/button';
import { Square, RectangleVertical, RectangleHorizontal } from 'lucide-react';

const formats = [
    { name: 'Quadrado', value: 'square image, 1:1 aspect ratio', icon: Square },
    { name: 'Retrato', value: 'portrait orientation, 9:16 aspect ratio', icon: RectangleVertical },
    { name: 'Paisagem', value: 'landscape orientation, 16:9 aspect ratio', icon: RectangleHorizontal }
];

export default function FormatSelector({ selectedFormat, onFormatChange }) {
    return (
        <div>
            <h3 className="text-lg font-semibold text-white mb-4 text-left">Escolha um Formato</h3>
            <div className="flex flex-wrap gap-3">
                {formats.map(format => (
                    <Button
                        key={format.name}
                        onClick={() => onFormatChange(format.value)}
                        variant="outline"
                        className={`
                            border-2 rounded-lg h-auto p-3 transition-all duration-300
                            ${selectedFormat === format.value 
                                ? 'bg-[#00d4aa] text-black border-[#00d4aa] hover:bg-[#00b894]' 
                                : 'bg-transparent text-[#ccc] border-[#333] hover:border-[#00d4aa] hover:text-white'}
                        `}
 import React from 'react';
import { Slider } from "@/components/ui/slider";

export default function ImageCountSelector({ imageCount, onImageCountChange }) {
    return (
        <div>
            <div className="flex justify-between items-center mb-4">
                <h3 className="text-lg font-semibold text-white text-left">Quantidade de Imagens</h3>
                <span className="text-2xl font-bold text-[#00d4aa] w-12 h-12 flex items-center justify-center bg-black rounded-full border-2 border-[#333]">
                    {imageCount}
                </span>
            </div>
            <Slider
                defaultValue={[imageCount]}
                value={[imageCount]}
                onValueChange={(value) => onImageCountChange(value[0])}
                min={1}
                max={4}
                step={1}
                className="w-full"
            />
        </div>
    );
}
import React from 'react';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';
import { Copy, Download, Check, ZoomIn } from 'lucide-react';
import { format } from 'date-fns';

export default function ImageCard({ image, onCopy, onDownload, isCopied, onImageClick }) {
    return (
        <motion.div
            layout
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            exit={{ opacity: 0, scale: 0.8 }}
            className="bg-[#111] p-4 border border-[#333] rounded-lg text-left hover:border-[#00d4aa] transition-all duration-300"
        >
            <div className="relative group">
                <img 
                    src={image.image_url} 
                    alt={image.title} 
                    className="w-full h-48 object-cover rounded-md mb-4"
                    onError={(e) => {
                        e.target.src = 'https://images.unsplash.com/photo-1584464491033-06628f3a6b7b?w=400&h=300&fit=crop';
                    }}
 import React, { useState } from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Copy, Check, Heart, QrCode } from "lucide-react";
import { motion } from "framer-motion";

const donationAmounts = [
    { value: 5, label: "R$ 5,00", description: "Um café ☕" },
    { value: 7, label: "R$ 7,00", description: "Dois cafés ☕☕" },
    { value: 10, label: "R$ 10,00", description: "Três cafés ☕☕☕" }
];

export default function DonationModal({ isOpen, onClose }) {
    const [selectedAmount, setSelectedAmount] = useState(5);
    const [copiedText, setCopiedText] = useState(null);
    
    const pixKey = "1c814ae7-453e-470d-a9b4-9b26f1589d1a";
    const pixEmail = "loritos.videoshort.ai@gmail.com";
    const qrCodeUrl = "https://qtrypzzcjebvfcihiynt.supabase.co/storage/v1/object/public/base44-prod/public/68ce2398ef140541afdc6e4b/20f321200_image.png";

    const handleCopy = async (text, type) => {
        try {
 import React from 'react';
import { Button } from '@/components/ui/button';
import { Heart } from 'lucide-react';
import { motion } from 'framer-motion';

export default function DonationButton({ onClick }) {
    return (
        <motion.div
            initial={{ scale: 0 }}
            animate={{ scale: 1 }}
            transition={{ delay: 1, type: "spring", stiffness: 200 }}
            className="fixed bottom-6 right-6 z-50"
        >
            <Button
                onClick={onClick}
                className="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-500 hover:to-pink-500 text-white border-none rounded-full p-4 shadow-2xl hover:shadow-xl transition-all hover:scale-110 group"
                size="lg"
            >
                <Heart className="w-6 h-6 group-hover:animate-pulse" />
                <span className="ml-2 font-semibold">Apoiar</span>
            </Button>
        </motion.div>
    );
}
import React from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogClose } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Download, X } from "lucide-react";

export default function ImagePreviewModal({ isOpen, onClose, image, onDownload }) {
    if (!image) return null;

    return (
        <Dialog open={isOpen} onOpenChange={onClose}>
            <DialogContent className="bg-[#111] border border-[#333] text-white max-w-4xl p-0">
                <DialogHeader className="p-4 border-b border-[#333] flex flex-row items-center justify-between">
                    <DialogTitle className="text-[#00d4aa] truncate">{image.title}</DialogTitle>
                    <DialogClose asChild>
                        <Button variant="ghost" size="icon" className="text-gray-400 hover:text-white">
                           <X className="w-5 h-5" />
                        </Button>
                    </DialogClose>
                </DialogHeader>
                
                <div className="grid grid-cols-1 md:grid-cols-5 gap-6 p-6">
                    <div className="md:col-span-3 flex items-center justify-center bg-black rounded-lg overflow-hidden">
                         <img 
 
 
